// Code generated by goa v3.20.0, DO NOT EDIT.
//
// mktextr HTTP client types
//
// Command:
// $ goa gen mktextr/design

package client

import (
	mktextr "mktextr/gen/mktextr"
	mktextrviews "mktextr/gen/mktextr/views"
)

// CompleteTaskRequestBody is the type of the "mktextr" service "completeTask"
// endpoint HTTP request body.
type CompleteTaskRequestBody struct {
	// The file to upload
	File []byte `encoding:"form"`
	// Name of the file
	Filename string `encoding:"form"`
}

// GetTextureByCoordinatesOKResponseBody is the type of the "mktextr" service
// "getTextureByCoordinates" endpoint HTTP response body.
type GetTextureByCoordinatesOKResponseBody struct {
	TaskID        *string `form:"taskId,omitempty" json:"taskId,omitempty" xml:"taskId,omitempty"`
	BaseMapURL    *string `form:"baseMapUrl,omitempty" json:"baseMapUrl,omitempty" xml:"baseMapUrl,omitempty"`
	ContourMapURL *string `form:"contourMapUrl,omitempty" json:"contourMapUrl,omitempty" xml:"contourMapUrl,omitempty"`
}

// GetTextureByCoordinatesAcceptedResponseBody is the type of the "mktextr"
// service "getTextureByCoordinates" endpoint HTTP response body.
type GetTextureByCoordinatesAcceptedResponseBody struct {
	TaskID        *string `form:"taskId,omitempty" json:"taskId,omitempty" xml:"taskId,omitempty"`
	BaseMapURL    *string `form:"baseMapUrl,omitempty" json:"baseMapUrl,omitempty" xml:"baseMapUrl,omitempty"`
	ContourMapURL *string `form:"contourMapUrl,omitempty" json:"contourMapUrl,omitempty" xml:"contourMapUrl,omitempty"`
}

// GetTextureByCoordinatesBadRequestResponseBody is the type of the "mktextr"
// service "getTextureByCoordinates" endpoint HTTP response body.
type GetTextureByCoordinatesBadRequestResponseBody struct {
	TaskID        *string `form:"taskId,omitempty" json:"taskId,omitempty" xml:"taskId,omitempty"`
	BaseMapURL    *string `form:"baseMapUrl,omitempty" json:"baseMapUrl,omitempty" xml:"baseMapUrl,omitempty"`
	ContourMapURL *string `form:"contourMapUrl,omitempty" json:"contourMapUrl,omitempty" xml:"contourMapUrl,omitempty"`
}

// NewCompleteTaskRequestBody builds the HTTP request body from the payload of
// the "completeTask" endpoint of the "mktextr" service.
func NewCompleteTaskRequestBody(p *mktextr.CompleteTaskPayload) *CompleteTaskRequestBody {
	body := &CompleteTaskRequestBody{
		File:     p.File,
		Filename: p.Filename,
	}
	return body
}

// NewGetTextureByCoordinatesGetResultOK builds a "mktextr" service
// "getTextureByCoordinates" endpoint result from a HTTP "OK" response.
func NewGetTextureByCoordinatesGetResultOK(body *GetTextureByCoordinatesOKResponseBody) *mktextrviews.GetResultView {
	v := &mktextrviews.GetResultView{
		TaskID:        body.TaskID,
		BaseMapURL:    body.BaseMapURL,
		ContourMapURL: body.ContourMapURL,
	}

	return v
}

// NewGetTextureByCoordinatesGetResultAccepted builds a "mktextr" service
// "getTextureByCoordinates" endpoint result from a HTTP "Accepted" response.
func NewGetTextureByCoordinatesGetResultAccepted(body *GetTextureByCoordinatesAcceptedResponseBody) *mktextrviews.GetResultView {
	v := &mktextrviews.GetResultView{
		TaskID:        body.TaskID,
		BaseMapURL:    body.BaseMapURL,
		ContourMapURL: body.ContourMapURL,
	}

	return v
}

// NewGetTextureByCoordinatesGetResultBadRequest builds a "mktextr" service
// "getTextureByCoordinates" endpoint result from a HTTP "BadRequest" response.
func NewGetTextureByCoordinatesGetResultBadRequest(body *GetTextureByCoordinatesBadRequestResponseBody) *mktextrviews.GetResultView {
	v := &mktextrviews.GetResultView{
		TaskID:        body.TaskID,
		BaseMapURL:    body.BaseMapURL,
		ContourMapURL: body.ContourMapURL,
	}

	return v
}
