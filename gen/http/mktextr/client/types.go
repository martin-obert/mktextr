// Code generated by goa v3.20.0, DO NOT EDIT.
//
// mktextr HTTP client types
//
// Command:
// $ goa gen mktextr/design

package client

import (
	mktextr "mktextr/gen/mktextr"
)

// CompleteTaskRequestBody is the type of the "mktextr" service "completeTask"
// endpoint HTTP request body.
type CompleteTaskRequestBody struct {
	// The texture
	Texture []byte `form:"texture" json:"texture" xml:"texture"`
}

// GetTextureByIDResponseBody is the type of the "mktextr" service
// "getTextureById" endpoint HTTP response body.
type GetTextureByIDResponseBody struct {
	// Unique identifier
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetTextureByCoordinatesResponseBody is the type of the "mktextr" service
// "getTextureByCoordinates" endpoint HTTP response body.
type GetTextureByCoordinatesResponseBody struct {
	// Unique identifier
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// NewCompleteTaskRequestBody builds the HTTP request body from the payload of
// the "completeTask" endpoint of the "mktextr" service.
func NewCompleteTaskRequestBody(p *mktextr.TaskCompletionPayload) *CompleteTaskRequestBody {
	body := &CompleteTaskRequestBody{
		Texture: p.Texture,
	}
	return body
}

// NewGetTextureByIDTextureReferencePayloadOK builds a "mktextr" service
// "getTextureById" endpoint result from a HTTP "OK" response.
func NewGetTextureByIDTextureReferencePayloadOK(body *GetTextureByIDResponseBody) *mktextr.TextureReferencePayload {
	v := &mktextr.TextureReferencePayload{
		ID: body.ID,
	}

	return v
}

// NewGetTextureByCoordinatesTextureReferencePayloadOK builds a "mktextr"
// service "getTextureByCoordinates" endpoint result from a HTTP "OK" response.
func NewGetTextureByCoordinatesTextureReferencePayloadOK(body *GetTextureByCoordinatesResponseBody) *mktextr.TextureReferencePayload {
	v := &mktextr.TextureReferencePayload{
		ID: body.ID,
	}

	return v
}
