// Code generated by goa v3.20.0, DO NOT EDIT.
//
// mktextr views
//
// Command:
// $ goa gen mktextr/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// GetResult is the viewed result type that is projected based on a view.
type GetResult struct {
	// Type to project
	Projected *GetResultView
	// View to render
	View string
}

// GetResultView is a type that runs validations on a projected type.
type GetResultView struct {
	StatusCode    *string
	TaskID        *string
	BaseMapURL    *string
	ContourMapURL *string
}

var (
	// GetResultMap is a map indexing the attribute names of GetResult by view name.
	GetResultMap = map[string][]string{
		"default": {
			"taskId",
			"baseMapUrl",
			"contourMapUrl",
		},
	}
)

// ValidateGetResult runs the validations defined on the viewed result type
// GetResult.
func ValidateGetResult(result *GetResult) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateGetResultView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateGetResultView runs the validations defined on GetResultView using
// the "default" view.
func ValidateGetResultView(result *GetResultView) (err error) {

	return
}
