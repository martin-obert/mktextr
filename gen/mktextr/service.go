// Code generated by goa v3.20.0, DO NOT EDIT.
//
// mktextr service
//
// Command:
// $ goa gen mktextr/design

package mktextr

import (
	"context"
)

// Texture store
type Service interface {
	// GetTaskQueue implements GetTaskQueue.
	GetTaskQueue(context.Context) (res *GetTaskQueueResult, err error)
	// GetTextureByCoordinates implements getTextureByCoordinates.
	GetTextureByCoordinates(context.Context, *GetTextureByCoordinatesPayload) (res *GetTextureByCoordinatesResponse, err error)
	// CompleteTask implements completeTask.
	CompleteTask(context.Context, *CompleteTaskPayload) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "mktextr"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "mktextr"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"GetTaskQueue", "getTextureByCoordinates", "completeTask"}

// CompleteTaskPayload is the payload type of the mktextr service completeTask
// method.
type CompleteTaskPayload struct {
	// The file to upload
	File []byte `encoding:"form"`
	// ID of the task
	Extension string `encoding:"form"`
	// ID of the task
	TaskID string
}

// GetTaskQueueResult is the result type of the mktextr service GetTaskQueue
// method.
type GetTaskQueueResult struct {
	Tasks []string
}

// GetTextureByCoordinatesPayload is the payload type of the mktextr service
// getTextureByCoordinates method.
type GetTextureByCoordinatesPayload struct {
	// Texture X
	X int
	// Texture y
	Y int
	// WorldId
	WorldID string
}

// GetTextureByCoordinatesResponse is the result type of the mktextr service
// getTextureByCoordinates method.
type GetTextureByCoordinatesResponse struct {
	TextureSetState *string
	BaseMapURL      *string
	ContourMapURL   *string
	SubState        *string
}
